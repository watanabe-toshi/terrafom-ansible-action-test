name: Terraform Apply/Destroy

on:
  workflow_dispatch:
    inputs:
      aws_role_arn:
        description: "AWS Role ARN for OIDC"
        required: true

      action:
        description: "apply or destroy"
        required: false
        default: "apply"
        type: choice
        options: [apply, destroy]

      project_name:
        description: "e.g. watanababy"
        required: true

      vpc_cidr:
        description: "e.g. 10.0.0.0/24"
        required: true

      public_subnet_cidrs:
        description: 'JSON array: ["10.0.0.0/28","10.0.0.16/28"]'
        required: true

      private_subnet_cidrs:
        description: 'JSON array: ["10.0.0.32/28","10.0.0.48/28"]'
        required: true
        
      allowed_ip:
        description: "e.g. 36.14.103.150/32"
        required: true

      tf_state_bucket:
        description: "TF_STATE_BUCKET: 既存 S3 バケット名"
        required: true
        type: string

      tf_lock_table:
        description: "TF_LOCK_TABLE: 既存 DynamoDB テーブル名"
        required: true
        type: string

      tf_state_key:
        description: "TF_STATE_KEY: stateキー (例: test/dev/terraform.tfstate)"
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  TF_DIR: .

jobs:
  tf:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws_role_arn }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Cache .terraform
        uses: actions/cache@v4
        with:
          path: ./.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ inputs.tf_state_bucket }}" \
            -backend-config="key=${{ inputs.tf_state_key }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ inputs.tf_lock_table }}" \
            -reconfigure
        
      - name: Terraform plan
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform plan \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="project_name=${{ inputs.project_name }}" \
            -var="vpc_cidr=${{ inputs.vpc_cidr }}" \
            -var='public_subnet_cidrs=${{ toJson(fromJSON(inputs.public_subnet_cidrs)) }}' \
            -var='private_subnet_cidrs=${{ toJson(fromJSON(inputs.private_subnet_cidrs)) }}' \
            -var="allowed_ip=${{ inputs.allowed_ip }}"

      - name: Terraform apply
        if: ${{ inputs.action == 'apply' }}
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="project_name=${{ inputs.project_name }}" \
            -var="vpc_cidr=${{ inputs.vpc_cidr }}" \
            -var='public_subnet_cidrs=${{ toJson(fromJSON(inputs.public_subnet_cidrs)) }}' \
            -var='private_subnet_cidrs=${{ toJson(fromJSON(inputs.private_subnet_cidrs)) }}' \
            -var="allowed_ip=${{ inputs.allowed_ip }}"

      - name: Show ansible public IP
        if: ${{ inputs.action == 'apply' }}
        run: terraform output -raw ansible_public_ip

      - name: Terraform destroy
        if: ${{ inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform destroy -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="project_name=${{ inputs.project_name }}" \
            -var="vpc_cidr=${{ inputs.vpc_cidr }}" \
            -var='public_subnet_cidrs=${{ toJson(fromJSON(inputs.public_subnet_cidrs)) }}' \
            -var='private_subnet_cidrs=${{ toJson(fromJSON(inputs.private_subnet_cidrs)) }}' \
            -var="allowed_ip=${{ inputs.allowed_ip }}"
